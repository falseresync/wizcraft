plugins {
	id 'fabric-loom' version '1.4-SNAPSHOT'
	id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	maven {
		url "https://maven2.bai.lol"
		content {
			includeGroup "lol.bai"
			includeGroup "mcp.mobius.waila"
		}
	}
	maven {
		url "https://jitpack.io"
		content {
			includeGroup "com.github.falseresync"
		}
	}
	maven {
		name = "Modrinth Maven"
		url = "https://api.modrinth.com/maven"
		content {
			includeGroup "maven.modrinth"
		}
	}
	maven {
		name = "CottonMC"
		url = "https://server.bbkr.space/artifactory/libs-release"
	}
	maven {
		name = "Ladysnake Mods"
		url = 'https://maven.ladysnake.org/releases'
	}
	maven {
		name = "TerraformersMC"
		url = "https://maven.terraformersmc.com/"
	}
	maven {
		name 'Xander Maven'
		url 'https://maven.isxander.dev/releases'
	}
}

loom {
	accessWidenerPath = file("src/main/resources/wizcraft.accesswidener")
}

fabricApi {
	configureDataGeneration()
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:$minecraft_version"
	mappings "net.fabricmc:yarn:$yarn_mappings:v2"
	modImplementation "net.fabricmc:fabric-loader:$loader_version"
	modImplementation "net.fabricmc.fabric-api:fabric-api:$fabric_version"

	// ------------------------
	// --- MOD DEPENDENCIES ---
	// ------------------------
	modImplementation include("io.github.cottonmc:LibGui:$libgui_version")
	modImplementation include("com.github.falseresync:libhudcompat:$libhudcompat_version")
	modImplementation "dev.isxander.yacl:yet-another-config-lib-fabric:$yacl_version"

	// --------------------------
	// --- OTHER DEPENDENCIES ---
	// --------------------------
	compileOnly 'org.jetbrains:annotations:24.1.0'

	// -----------------------------------
	// --- COMPATIBILITY & CONVENIENCE ---
	// -----------------------------------
	// Comment out / uncomment for testing and convenience
	modCompileOnly "mcp.mobius.waila:wthit-api:fabric-$wthit_version"
	modLocalRuntime "mcp.mobius.waila:wthit:fabric-$wthit_version"
	modLocalRuntime "lol.bai:badpackets:fabric-$badpackets_version"

	modCompileOnly "dev.emi:emi-fabric:$emi_version:api"
	modLocalRuntime "dev.emi:emi-fabric:$emi_version"

	modCompileOnly "com.terraformersmc:modmenu:$modmenu_version"
	modLocalRuntime "com.terraformersmc:modmenu:$modmenu_version"

	modCompileOnly "maven.modrinth:anshar:0.0.10"
	modCompileOnly "dev.onyxstudios.cardinal-components-api:cardinal-components-base:5.4.0"
//	modLocalRuntime "maven.modrinth:anshar:0.0.10"
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}"}
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}